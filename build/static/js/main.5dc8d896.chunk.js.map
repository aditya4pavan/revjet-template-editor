{"version":3,"sources":["title-bar.js","sample-base.js","fieldGroups.js","App.js","serviceWorker.js","index.js"],"names":["Object","defineProperty","exports","value","ej2_base_1","require","ej2_buttons_1","ej2_splitbuttons_1","TitleBar","element","docEditor","isShareNeeded","_this","this","initializeTitleBar","documentTitle","createElement","id","styles","documentTitleContentEditor","className","appendChild","tileBarDiv","setAttribute","btnStyles","cancel","addButton","done","print","open","export","text","style","display","wireEvents","addEventListener","onPrint","e","target","fileUpload","document","getElementById","click","console","log","documentEditor","serialize","keyCode","preventDefault","contentEditable","textContent","documentName","updateDocumentEditorTitle","focus","window","getSelection","selectAllChildren","updateDocumentTitle","onExportClick","args","item","save","format","prototype","setTooltipForPopup","querySelectorAll","iconClass","btnText","tooltipText","isDropDown","items","button","DropDownButton","select","iconCss","cssClass","content","Button","enableRipple","SampleBase","setTimeout","rendereComplete","React","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","FieldGroup","groups","insertContent","classes","useState","group","setGroup","field","setField","FormControl","fullWidth","InputLabel","Select","onChange","event","MenuItem","map","i","key","name","disabled","find","fields","IconButton","onClick","variant","color","DocumentEditorContainerComponent","Inject","Toolbar","Default","arguments","socket","io","path","container","fieldCode","replace","editor","insertField","hostUrl","onLoadDefault","titleBar","documentChange","focusIn","state","complete","uid","props","match","params","emit","on","Array","isArray","setState","serviceUrl","pageOutline","acceptTab","resize","enableWordExport","ref","scope","enableToolbar","locale","handleMerge","Boolean","location","hostname","ReactDOM","render","exact","component","App","classList","add","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5dc8d896.chunk.js","sourcesContent":["Object.defineProperty(exports, \"__esModule\", { value: true });\nvar ej2_base_1 = require(\"@syncfusion/ej2-base\");\nvar ej2_buttons_1 = require(\"@syncfusion/ej2-buttons\");\nvar ej2_splitbuttons_1 = require(\"@syncfusion/ej2-splitbuttons\");\n/**\n * Represents document editor title bar.\n */\nvar TitleBar = /** @class */ (function () {\n    function TitleBar(element, docEditor, isShareNeeded) {\n        var _this = this;\n        this.initializeTitleBar = function (isShareNeeded) {\n            var downloadText;\n            var downloadToolTip;\n            var printText;\n            var printToolTip;\n            var openText;\n            var documentTileText;\n            var saveText;\n            var saveToolTip;\n            var cancelText;\n            var cancelToolTip;\n\n            downloadText = 'Download';\n            downloadToolTip = 'Download this document.';\n            printText = 'Print';\n            printToolTip = 'Print this document (Ctrl+P).';\n            openText = 'Open';\n            documentTileText = 'Document Name. Click or tap to rename this document.';\n            saveText = 'Save';\n            saveToolTip = 'Save Document';\n            cancelText = 'Cancel';\n            cancelToolTip = 'Cancel Text';\n\n            // tslint:disable-next-line:max-line-length\n            _this.documentTitle = ej2_base_1.createElement('label', { id: 'documenteditor_title_name', styles: 'font-weight:400;text-overflow:ellipsis;white-space:pre;overflow:hidden;user-select:none;cursor:text' });\n            // tslint:disable-next-line:max-line-length\n            _this.documentTitleContentEditor = ej2_base_1.createElement('div', { id: 'documenteditor_title_contentEditor', className: 'single-line' });\n            _this.documentTitleContentEditor.appendChild(_this.documentTitle);\n            _this.tileBarDiv.appendChild(_this.documentTitleContentEditor);\n            _this.documentTitleContentEditor.setAttribute('title', documentTileText);\n            var btnStyles = 'float:right;background: transparent;box-shadow:none; font-family: inherit;border-color: transparent;'\n                + 'border-radius: 2px;color:inherit;font-size:12px;text-transform:capitalize;height:28px;font-weight:400;margin-top: 2px;';\n            // tslint:disable-next-line:max-line-length\n            _this.cancel = _this.addButton('e-de-icon-Cancel e-de-padding-right', cancelText, btnStyles, 'de-save', cancelToolTip, false);\n            _this.done = _this.addButton('e-de-icon-Save e-de-padding-right', saveText, btnStyles, 'de-save', saveToolTip, false);\n            _this.print = _this.addButton('e-de-icon-Print e-de-padding-right', printText, btnStyles, 'de-print', printToolTip, false);\n            _this.open = _this.addButton('e-de-icon-Open e-de-padding-right', openText, btnStyles, 'de-open', openText, false);\n\n\n            var items = [\n                { text: 'Microsoft Word (.docx)', id: 'word' },\n                { text: 'Syncfusion Document Text (.sfdt)', id: 'sfdt' },\n            ];\n            // tslint:disable-next-line:max-line-length\n            _this.export = _this.addButton('e-de-icon-Download e-de-padding-right', downloadText, btnStyles, 'documenteditor-share', downloadToolTip, true, items);\n\n            if (!isShareNeeded) {\n                _this.export.element.style.display = 'none';\n            }\n            else {\n                _this.open.element.style.display = 'none';\n            }\n        };\n        this.wireEvents = function () {\n            _this.print.element.addEventListener('click', _this.onPrint);\n            _this.open.element.addEventListener('click', function (e) {\n                if (e.target.id === 'de-open') {\n                    var fileUpload = document.getElementById('uploadfileButton');\n                    fileUpload.value = '';\n                    fileUpload.click();\n                }\n            });\n            _this.done.element.addEventListener('click', function (e) {\n                console.log(_this.documentEditor.serialize());\n            });\n            _this.cancel.element.addEventListener('click', function (e) {\n                console.log('Cancel')\n            });\n            _this.documentTitleContentEditor.addEventListener('keydown', function (e) {\n                if (e.keyCode === 13) {\n                    e.preventDefault();\n                    _this.documentTitleContentEditor.contentEditable = 'false';\n                    if (_this.documentTitleContentEditor.textContent === '') {\n                        _this.documentTitleContentEditor.textContent = 'Document1';\n                    }\n                }\n            });\n            _this.documentTitleContentEditor.addEventListener('blur', function () {\n                if (_this.documentTitleContentEditor.textContent === '') {\n                    _this.documentTitleContentEditor.textContent = 'Document1';\n                }\n                _this.documentTitleContentEditor.contentEditable = 'false';\n                _this.documentEditor.documentName = _this.documentTitle.textContent;\n            });\n            _this.documentTitleContentEditor.addEventListener('click', function () {\n                _this.updateDocumentEditorTitle();\n            });\n        };\n        this.updateDocumentEditorTitle = function () {\n            _this.documentTitleContentEditor.contentEditable = 'true';\n            _this.documentTitleContentEditor.focus();\n            window.getSelection().selectAllChildren(_this.documentTitleContentEditor);\n        };\n        // Updates document title.\n        this.updateDocumentTitle = function () {\n            if (_this.documentEditor.documentName === '') {\n                _this.documentEditor.documentName = 'Untitled';\n            }\n            _this.documentTitle.textContent = _this.documentEditor.documentName;\n        };\n        this.onPrint = function () {\n            _this.documentEditor.print();\n        };\n        this.onExportClick = function (args) {\n            var value = args.item.id;\n            switch (value) {\n                case 'word':\n                    _this.save('Docx');\n                    break;\n                case 'sfdt':\n                    _this.save('Sfdt');\n                    break;\n                default:\n                    break;\n            }\n        };\n        this.save = function (format) {\n            // tslint:disable-next-line:max-line-length\n            _this.documentEditor.save(_this.documentEditor.documentName === '' ? 'sample' : _this.documentEditor.documentName, format);\n        };\n        //initializes title bar elements.\n        this.tileBarDiv = element;\n        this.documentEditor = docEditor;\n        this.initializeTitleBar(isShareNeeded);\n        this.wireEvents();\n    }\n    TitleBar.prototype.setTooltipForPopup = function () {\n        console.log(document.getElementById('documenteditor-share-popup').querySelectorAll('li'))\n        // tslint:disable-next-line:max-line-length\n        document.getElementById('documenteditor-share-popup').querySelectorAll('li')[0].setAttribute('title', 'Download a copy of this document to your computer as a DOCX file.');\n        // tslint:disable-next-line:max-line-length\n        document.getElementById('documenteditor-share-popup').querySelectorAll('li')[1].setAttribute('title', 'Download a copy of this document to your computer as an SFDT file.');\n    };\n    // tslint:disable-next-line:max-line-length\n    TitleBar.prototype.addButton = function (iconClass, btnText, styles, id, tooltipText, isDropDown, items) {\n        var _this = this;\n        var button = ej2_base_1.createElement('button', { id: id, styles: styles });\n        this.tileBarDiv.appendChild(button);\n        button.setAttribute('title', tooltipText);\n        if (isDropDown) {\n            // tslint:disable-next-line:max-line-length\n            var dropButton = new ej2_splitbuttons_1.DropDownButton({ select: this.onExportClick, items: items, iconCss: iconClass, cssClass: 'e-caret-hide', content: btnText, open: function () { _this.setTooltipForPopup(); } }, button);\n            return dropButton;\n        }\n        else {\n            var ejButton = new ej2_buttons_1.Button({ iconCss: iconClass, content: btnText }, button);\n            return ejButton;\n        }\n    };\n    return TitleBar;\n}());\nexports.TitleBar = TitleBar;\n","import * as React from 'react';\nimport { enableRipple } from '@syncfusion/ej2-base';\nenableRipple(true);\n\nexport class SampleBase extends React.PureComponent {\n    rendereComplete() {\n        /**custom render complete function */\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            this.rendereComplete();\n        });\n    }\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIos from '@material-ui/icons/ArrowBackIos';\nimport ArrowForwardIos from '@material-ui/icons/ArrowForwardIos';\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nexport default function FieldGroup({ groups = [], insertContent }) {\n    const classes = useStyles();\n    const [group, setGroup] = React.useState('');\n    const [field, setField] = React.useState('');\n\n    const handleGroup = (event) => {\n        const value = event.target.value;\n        setGroup(value);\n    };\n\n    const handleField = (event) => {\n        setField(event.target.value);\n    };\n\n    return (\n        <div className='row'>\n            <div className='col-sm-3'>\n                <FormControl className={classes.formControl} fullWidth>\n                    <InputLabel>Select Field Group</InputLabel>\n                    <Select\n                        value={group}\n                        onChange={handleGroup}\n                    >\n                        <MenuItem value=\"\">\n                            <em>None</em>\n                        </MenuItem>\n                        {groups.map((e, i) => {\n                            return <MenuItem key={i} value={e.id}>{e.name}</MenuItem>\n                        })}\n                    </Select>\n                </FormControl>\n            </div>\n            <div className='col-sm-3'>\n                <FormControl className={classes.formControl} fullWidth disabled={group === ''}>\n                    <InputLabel>Select Field</InputLabel>\n                    <Select\n                        value={field}\n                        onChange={handleField}\n                    >\n                        <MenuItem value=\"\">\n                            <em>None</em>\n                        </MenuItem>\n                        {(groups.find(e => e.id === group) || { fields: [] }).fields.map((e, i) => {\n                            return <MenuItem key={i} value={e.id}>{e.name}</MenuItem>\n                        })}\n                    </Select>\n                </FormControl>\n            </div>\n            <div className='col-sm-3'>\n                <IconButton onClick={() => insertContent(`BeginGroup:${group}`)} className='mt-3' disabled={group === ''}><ArrowBackIos /></IconButton>\n                <Button onClick={() => insertContent(field)} variant='outlined' color='primary' className='mt-3' disabled={group === '' || field === ''}>Insert Field</Button>\n                <IconButton onClick={() => insertContent(`EndGroup:${group}`)} className='mt-3' disabled={group === ''}><ArrowForwardIos /></IconButton>\n            </div>\n        </div>\n    );\n}","import './App.css';\nimport * as React from 'react';\nimport { SampleBase } from './sample-base';\nimport { DocumentEditorContainerComponent, Toolbar } from '@syncfusion/ej2-react-documenteditor';\nimport { TitleBar } from './title-bar';\nimport FieldGroup from './fieldGroups';\nimport io from 'socket.io-client';\n\nDocumentEditorContainerComponent.Inject(Toolbar);\n// tslint:disable:max-line-length\n\nexport default class Default extends SampleBase {\n    constructor() {\n        super(...arguments);\n        this.hostUrl = 'http://localhost:6000';\n        this.onLoadDefault = () => {\n            // this.container.documentEditor.open(JSON.stringify(defaultDocument));\n            this.container.documentEditor.documentName = 'Getting Started';\n            this.titleBar.updateDocumentTitle();\n            this.container.documentChange = () => {\n                this.titleBar.updateDocumentTitle();\n                this.container.documentEditor.focusIn();\n            };\n        };\n        this.state = {\n            complete: false, groups: []\n        }\n    }\n\n    socket = io('http://localhost:5000', {\n        path: '/pusher'\n    });\n\n\n    componentDidMount() {\n        const { uid } = this.props.match.params;\n        this.socket.emit('template', { id: uid })\n\n        this.socket.on('webapp', (content) => {\n            console.log(content)\n            if (content && Array.isArray(content)) {\n                this.setState({ complete: true, groups: content })\n            }\n        })\n    }\n\n    // handleMerge = () => {\n    //     let sfdt = this.container.documentEditor.serialize();\n    //     Axios.post(this.container.serviceUrl + 'Download', JSON.stringify({ sfdt, groups }), {\n    //         headers: {\n    //             'Content-Type': 'application/json'\n    //         },\n    //         responseType: 'blob'\n    //     }).then(response => {\n    //         const url = window.URL.createObjectURL(new Blob([response.data]));\n    //         const link = document.createElement('a');\n    //         link.href = url;\n    //         link.setAttribute('download', 'Sample.docx'); //or any other extension\n    //         document.body.appendChild(link);\n    //         link.click();\n    //     })\n    // }\n\n    rendereComplete() {\n        this.container.serviceUrl = this.hostUrl + '/documenteditor/';\n        this.container.documentEditor.pageOutline = '#E0E0E0';\n        this.container.documentEditor.acceptTab = true;\n        this.container.documentEditor.resize();\n        this.container.documentEditor.enableWordExport = true;\n        this.titleBar = new TitleBar(document.getElementById('documenteditor_titlebar'), this.container.documentEditor, true);\n        this.editor = this.container.documentEditor;\n        this.onLoadDefault();\n    }\n\n    insertContent = (content) => {\n        if (this.container && content && content !== '') {\n            var fileName = content.replace(/\\n/g, '').replace(/\\r/g, '').replace(/\\r\\n/g, '');\n            var fieldCode = 'MERGEFIELD  ' + fileName + \"  \\\\* MERGEFORMAT \";\n            this.container.documentEditor.editor.insertField(fieldCode, '«' + content + '»');\n        }\n    }\n\n    render() {\n        if (this.state.complete)\n            return (<div className='control-pane'>\n                <div className='control-section'>\n                    <div id='documenteditor_titlebar' className=\"e-de-ctn-title\" />\n                    <FieldGroup groups={this.state.groups} insertContent={this.insertContent} />\n                    <div id=\"documenteditor_container_body\">\n                        <DocumentEditorContainerComponent id=\"container\" ref={(scope) => { this.container = scope; }} style={{ 'display': 'block', 'height': '590px' }} enableToolbar={true} locale='en-US' />\n                    </div>\n                </div>\n                <button onClick={this.handleMerge}>Download</button>\n            </div>);\n        return <p>Waiting For Connections</p>\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\n\nReactDOM.render(\n  <Router>\n    <Switch>\n      <Route exact path='/:uid' component={App} />\n      <Route path='/' render={() => <h4 className='text-center p-5'>Welcome to Delasoft WYSiWYG Engine</h4>} />\n    </Switch>\n  </Router>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nlet elem = document.getElementById('root');\nelem.classList.add('h-100')\nserviceWorker.unregister();\n"],"sourceRoot":""}